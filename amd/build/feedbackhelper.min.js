define(["exports","jquery","core/log","./cloudpoodllloader","core/str"],(function(_exports,_jquery,_log,_cloudpoodllloader,str){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_jquery=_interopRequireDefault(_jquery),_log=_interopRequireDefault(_log),_cloudpoodllloader=_interopRequireDefault(_cloudpoodllloader),str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(str),_log.default.debug("cloudpoodll feedback helper: initialising");let registeredtoggler=!1;class feedbackHandler{constructor(opts){_defineProperty(this,"togglestate",0),_defineProperty(this,"strings",{}),_defineProperty(this,"controls",{}),this.component=opts.component,this.subtype=opts.subtype||"",this.register_controls(),this.register_events()}static init(opts){return new feedbackHandler(opts)}static registerToggler(){registeredtoggler||(registeredtoggler=!0,document.addEventListener("click",(e=>{const toggleinput=e.target.closest('[data-action="toggle"]');if(toggleinput)try{const togglecontainer=document.querySelector(toggleinput.dataset.target);if(togglecontainer){const labelElement=toggleinput.closest("label.togglerecorder"),$togglecontainer=(0,_jquery.default)(togglecontainer);toggleinput.checked?($togglecontainer.collapse("show"),labelElement.classList.add("enabledstate")):($togglecontainer.collapse("hide"),labelElement.classList.remove("enabledstate"))}}catch(e){_log.default.debug(e)}})))}register_controls(){this.controls.deletebutton=(0,_jquery.default)("."+this.component+this.subtype+"_deletefeedbackbutton"),this.controls.updatecontrol=(0,_jquery.default)("#"+this.component+this.subtype+"_updatecontrol"),this.controls.currentcontainer=(0,_jquery.default)("."+this.component+this.subtype+"_currentfeedback"),this.controls.togglecontainer=(0,_jquery.default)("."+this.component+this.subtype+"_togglecontainer"),this.controls.togglebutton=(0,_jquery.default)("."+this.component+this.subtype+"_togglecontainer .togglebutton"),this.controls.toggletext=(0,_jquery.default)("."+this.component+this.subtype+"_togglecontainer .toggletext"),str.get_string("clicktohide",this.component).done((s=>{this.strings.clicktohide=s})),str.get_string("clicktoshow",this.component).done((s=>{this.strings.clicktoshow=s}))}register_events(){this.controls.deletebutton.click((()=>{this.controls.updatecontrol&&confirm(M.util.get_string("reallydeletefeedback",this.component))&&(this.controls.updatecontrol.val(-1),this.controls.currentcontainer.html(""))})),this.controls.togglebutton.click(this.toggle_currentfeedback.bind(this)),this.controls.toggletext.click(this.toggle_currentfeedback.bind(this))}toggle_currentfeedback(){return this.controls.currentcontainer.toggle({duration:300,complete:()=>{0==this.togglestate?(this.controls.togglebutton.removeClass("fa-toggle-off"),this.controls.togglebutton.addClass("fa-toggle-on"),this.controls.toggletext.text(this.strings.clicktohide),this.togglestate=1):(this.controls.togglebutton.removeClass("fa-toggle-on"),this.controls.togglebutton.addClass("fa-toggle-off"),this.controls.toggletext.text(this.strings.clicktoshow),this.togglestate=0)}}),!1}}return _exports.default=feedbackHandler,_exports.default}));

//# sourceMappingURL=feedbackhelper.min.js.map