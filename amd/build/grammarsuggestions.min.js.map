{"version":3,"file":"grammarsuggestions.min.js","sources":["../src/grammarsuggestions.js"],"sourcesContent":["define(['jquery', 'core/log','core/str','core/ajax','core/notification','assignfeedback_cloudpoodll/correctionsmarkup'],\n    function ($, log, str, Ajax, notification,correctionsmarkup) {\n    \"use strict\"; // jshint ;_;\n    /*\n    This file does small report\n     */\n\n    log.debug('Grammar suggestions: initialising');\n\n    return {\n        //controls\n        controls: {},\n        checking: '... checking ...',\n        nosuggestions: 'No suggestions',\n\n        //init the module\n        init: function(){\n            log.debug('Grammar suggestions: feedback cloudpoodll initialising');\n            this.init_strings();\n            this.register_controls();\n            this.register_events();\n        },\n\n        init_strings: function(){\n            log.debug('Grammar suggestions: initialising strings');\n          var that =this;\n          str.get_string('checking','assignfeedback_cloudpoodll').done(function(s){that.checking=s;});\n          str.get_string('nosuggestions','assignfeedback_cloudpoodll').done(function(s){that.nosuggestions=s;});\n        },\n\n        //load all the controls so we do not have to do it later\n        register_controls: function(){\n            log.debug('Grammar suggestions: registering controls');\n            this.controls.checkgrammarbutton = $('.grammarsuggestionstrigger');\n        },\n\n        //attach the various event handlers we need\n        register_events: function() {\n            var that = this;\n            log.debug('Grammar suggestions: registering events');\n            log.debug(that.controls);\n\n            that.controls.checkgrammarbutton.click(function(e){\n                log.debug('grammarsuggestionstrigger clicked');\n                //collect source and target from data-src and data-target\n                var srcselector = $(this).data('src');\n                var targetselector  = $(this).data('target');\n                var differenceselector  = $(this).data('difference');\n                var language = $(this).data('language');\n                that.check_grammar(that,srcselector ,targetselector,differenceselector ,language);\n                return false;\n            });\n        },//end of register events\n\n        //to make this useful in case of a div/span/textarea ..\n        set_value: function(element, value, type){\n            if(element.is('textarea')){\n                $(element).val(value);\n            }else{\n                switch(type){\n                    case 'html':\n                        $(element).html(value);\n                        break;\n\n                    case 'text':\n                    default:\n                        $(element).text(value);\n                        break;\n                }\n            }\n        },\n\n        get_value: function(element){\n            if(element.is('textarea')){\n                return $(element).val();\n            }else{\n               return $(element).text();\n            }\n        },\n\n        check_grammar: function (that,srcselector,targetselector,differenceselector, language) {\n            log.debug('Grammar suggestions: checking grammar');\n            var src_element = $(srcselector);\n            var target_element = $(targetselector);\n            var difference_element = $(differenceselector);\n\n\n            //do the check\n            var text = that.get_value(src_element);\n            //but quit if its empty\n            if(!text || text==='' || text.trim()===''){\n                return;\n            }\n            that.set_value(target_element,that.checking, 'text');\n            Ajax.call([{\n                methodname: 'assignfeedback_cloudpoodll_check_grammar',\n                args: {\n                    text: text,\n                    language: language\n                },\n                done: function (ajaxresult) {\n\n                    var payloadobject = JSON.parse(ajaxresult);\n                    if (payloadobject) {\n                        if(payloadobject.grammarerrors.length<3){\n                            //hacky but fast way to flag no errors\n                            that.set_value(target_element,that.nosuggestions, 'text');\n                        }else{\n                            that.set_value(target_element,payloadobject.suggestions, 'text');\n                            //use this for html marked up suggestions (word numbers and spaces etc)\n                            that.set_value(difference_element,payloadobject.markedupsuggestions, 'html');\n\n                            var opts = [];\n                            opts['sessionerrors'] = payloadobject.grammarerrors;\n                            opts['sessionmatches'] = payloadobject.grammarmatches;\n                        }\n\n                    }else{\n                        //something went wrong, user does not really need to know details\n                        that.set_value(target_element,that.nosuggestions, 'text');\n                        log.debug('result not fetched');\n                    }\n\n                },\n                fail: notification.exception\n            }]);\n        },\n\n    };//end of return value\n});"],"names":["define","$","log","str","Ajax","notification","correctionsmarkup","debug","controls","checking","nosuggestions","init","init_strings","register_controls","register_events","that","this","get_string","done","s","checkgrammarbutton","click","e","srcselector","data","targetselector","differenceselector","language","check_grammar","set_value","element","value","type","is","val","html","text","get_value","src_element","target_element","difference_element","trim","call","methodname","args","ajaxresult","payloadobject","JSON","parse","grammarerrors","length","suggestions","markedupsuggestions","opts","grammarmatches","fail","exception"],"mappings":"AAAAA,uDAAO,CAAC,SAAU,WAAW,WAAW,YAAY,oBAAoB,iDACpE,SAAUC,EAAGC,IAAKC,IAAKC,KAAMC,aAAaC,0BAM1CJ,IAAIK,MAAM,qCAEH,CAEHC,SAAU,GACVC,SAAU,mBACVC,cAAe,iBAGfC,KAAM,WACFT,IAAIK,MAAM,+DACLK,oBACAC,yBACAC,mBAGTF,aAAc,WACVV,IAAIK,MAAM,iDACRQ,KAAMC,KACVb,IAAIc,WAAW,WAAW,8BAA8BC,MAAK,SAASC,GAAGJ,KAAKN,SAASU,KACvFhB,IAAIc,WAAW,gBAAgB,8BAA8BC,MAAK,SAASC,GAAGJ,KAAKL,cAAcS,MAInGN,kBAAmB,WACfX,IAAIK,MAAM,kDACLC,SAASY,mBAAqBnB,EAAE,+BAIzCa,gBAAiB,eACTC,KAAOC,KACXd,IAAIK,MAAM,2CACVL,IAAIK,MAAMQ,KAAKP,UAEfO,KAAKP,SAASY,mBAAmBC,OAAM,SAASC,GAC5CpB,IAAIK,MAAM,yCAENgB,YAActB,EAAEe,MAAMQ,KAAK,OAC3BC,eAAkBxB,EAAEe,MAAMQ,KAAK,UAC/BE,mBAAsBzB,EAAEe,MAAMQ,KAAK,cACnCG,SAAW1B,EAAEe,MAAMQ,KAAK,mBAC5BT,KAAKa,cAAcb,KAAKQ,YAAaE,eAAeC,mBAAoBC,WACjE,MAKfE,UAAW,SAASC,QAASC,MAAOC,SAC7BF,QAAQG,GAAG,YACVhC,EAAE6B,SAASI,IAAIH,eAGN,SADFC,KAEC/B,EAAE6B,SAASK,KAAKJ,YAKhB9B,EAAE6B,SAASM,KAAKL,QAMhCM,UAAW,SAASP,gBACbA,QAAQG,GAAG,YACHhC,EAAE6B,SAASI,MAEZjC,EAAE6B,SAASM,QAIzBR,cAAe,SAAUb,KAAKQ,YAAYE,eAAeC,mBAAoBC,UACzEzB,IAAIK,MAAM,6CACN+B,YAAcrC,EAAEsB,aAChBgB,eAAiBtC,EAAEwB,gBACnBe,mBAAqBvC,EAAEyB,oBAIvBU,KAAOrB,KAAKsB,UAAUC,aAEtBF,MAAe,KAAPA,MAA2B,KAAdA,KAAKK,SAG9B1B,KAAKc,UAAUU,eAAexB,KAAKN,SAAU,QAC7CL,KAAKsC,KAAK,CAAC,CACPC,WAAY,2CACZC,KAAM,CACFR,KAAMA,KACNT,SAAUA,UAEdT,KAAM,SAAU2B,gBAERC,cAAgBC,KAAKC,MAAMH,eAC3BC,iBACGA,cAAcG,cAAcC,OAAO,EAElCnC,KAAKc,UAAUU,eAAexB,KAAKL,cAAe,YACjD,CACDK,KAAKc,UAAUU,eAAeO,cAAcK,YAAa,QAEzDpC,KAAKc,UAAUW,mBAAmBM,cAAcM,oBAAqB,YAEjEC,KAAO,GACXA,KAAI,cAAoBP,cAAcG,cACtCI,KAAI,eAAqBP,cAAcQ,oBAK3CvC,KAAKc,UAAUU,eAAexB,KAAKL,cAAe,QAClDR,IAAIK,MAAM,uBAIlBgD,KAAMlD,aAAamD"}