{"version":3,"file":"setuprecorder.min.js","sources":["../src/setuprecorder.js"],"sourcesContent":["import $ from 'jquery';\nimport log from 'core/log';\nimport cloudpoodll from './cloudpoodllloader';\nimport * as str from 'core/str';\n\nlog.debug('cloudpoodll feedback setup recorder: initialising');\n\nconst instancemap = {};\n\nexport default class setuprecorder {\n\n    uploadstate = false;\n    strings = {};\n    controls = {};\n\n    constructor(opts) {\n        this.component = opts['component'];\n        this.subtype = opts['subtype'] || '';\n\n        this.register_controls();\n        this.register_events();\n        this.setup_recorder();\n    }\n\n    static init(opts) {\n        return new setuprecorder(opts);\n    }\n\n    setup_recorder() {\n        const recorderid = this.component + this.subtype + '_therecorder';\n        instancemap[recorderid] = Object.assign({}, this);\n        const recorder_callback = evt => {\n            if (instancemap.hasOwnProperty(evt.id)) {\n                const instance = instancemap[evt.id];\n                switch (evt.type) {\n                    case 'recording':\n                        if (evt.action === 'started') {\n                            instance.controls.updatecontrol.val();\n                        }\n                        break;\n                    case 'awaitingprocessing':\n                        if (instance.uploadstate != 'posted') {\n                            instance.controls.updatecontrol.val(evt.mediaurl);\n                        }\n                        instance.uploadstate = 'posted';\n                        break;\n                    case 'error':\n                        alert('PROBLEM:' + evt.message);\n                        break;\n                }\n            }\n        };\n        this.uploadstate = false;\n        cloudpoodll.init(recorderid, recorder_callback);\n    }\n\n    register_controls() {\n        this.controls.updatecontrol = $('#' + this.component + this.subtype + '_updatecontrol');\n    }\n\n    register_events() {\n        return;\n    }\n\n}// end of return object."],"names":["debug","instancemap","setuprecorder","constructor","opts","component","subtype","register_controls","register_events","setup_recorder","recorderid","this","Object","assign","uploadstate","init","evt","hasOwnProperty","id","instance","type","action","controls","updatecontrol","val","mediaurl","alert","message"],"mappings":"+iDAKIA,MAAM,2DAEJC,YAAc,SAECC,cAMjBC,YAAYC,0CAJE,kCACJ,oCACC,SAGFC,UAAYD,KAAI,eAChBE,QAAUF,KAAI,SAAe,QAE7BG,yBACAC,uBACAC,6BAGGL,aACD,IAAIF,cAAcE,MAG7BK,uBACUC,WAAaC,KAAKN,UAAYM,KAAKL,QAAU,eACnDL,YAAYS,YAAcE,OAAOC,OAAO,GAAIF,WAsBvCG,aAAc,6BACPC,KAAKL,YAtBSM,SAClBf,YAAYgB,eAAeD,IAAIE,IAAK,OAC9BC,SAAWlB,YAAYe,IAAIE,WACzBF,IAAII,UACH,YACkB,YAAfJ,IAAIK,QACJF,SAASG,SAASC,cAAcC,gBAGnC,qBAC2B,UAAxBL,SAASL,aACTK,SAASG,SAASC,cAAcC,IAAIR,IAAIS,UAE5CN,SAASL,YAAc,mBAEtB,QACDY,MAAM,WAAaV,IAAIW,cAS3CpB,yBACSe,SAASC,eAAgB,mBAAE,IAAMZ,KAAKN,UAAYM,KAAKL,QAAU,kBAG1EE"}