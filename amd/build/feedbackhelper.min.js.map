{"version":3,"file":"feedbackhelper.min.js","sources":["../src/feedbackhelper.js"],"sourcesContent":["import $ from 'jquery';\nimport log from 'core/log';\nimport cloudpoodll from './cloudpoodllloader';\nimport * as str from 'core/str';\n\nlog.debug('cloudpoodll feedback helper: initialising');\n\nconst instancemap = {};\nlet registeredtoggler = false;\n\nexport default class feedbackHandler {\n\n    togglestate = 0;\n    strings = {};\n    controls = {};\n\n    constructor(opts) {\n        this.component = opts['component'];\n        this.subtype = opts['subtype'] || '';\n\n        this.register_controls();\n        this.register_events();\n        this.setup_recorder();\n    }\n\n    static init(opts) {\n        return new feedbackHandler(opts);\n    }\n\n    static registerToggler() {\n        if (registeredtoggler) {\n            return;\n        }\n        registeredtoggler = true;\n        document.addEventListener('click', e => {\n            const toggleinput = e.target.closest('[data-action=\"toggle\"]');\n            if (toggleinput) {\n                try {\n                    const togglecontainer = document.querySelector(toggleinput.dataset.target);\n                    if (togglecontainer) {\n                        const labelElement = toggleinput.closest('label.togglerecorder');\n                        const $togglecontainer = $(togglecontainer);\n                        if (toggleinput.checked) {\n                            $togglecontainer.collapse('show');\n                            labelElement.classList.add('enabledstate');\n                        } else {\n                            $togglecontainer.collapse('hide');\n                            labelElement.classList.remove('enabledstate');\n                        }\n                    }\n                } catch (e) {\n                    //do nothing\n                    log.debug(e);\n                }\n            }\n        });\n\n    }\n\n\n    register_controls() {\n        this.controls.deletebutton = $('.' + this.component + this.subtype + '_deletefeedbackbutton');\n        this.controls.updatecontrol = $('#' + this.component + this.subtype + '_updatecontrol');\n        this.controls.currentcontainer = $('.' + this.component + this.subtype + '_currentfeedback');\n        this.controls.togglecontainer = $('.' + this.component + this.subtype + '_togglecontainer');\n        this.controls.togglebutton = $('.' + this.component + this.subtype + '_togglecontainer .togglebutton');\n        this.controls.toggletext = $('.' + this.component + this.subtype + '_togglecontainer .toggletext');\n        str.get_string('clicktohide', this.component).done(s => {\n            this.strings['clicktohide'] = s;\n        });\n        str.get_string('clicktoshow', this.component).done(s => {\n            this.strings['clicktoshow'] = s;\n        });\n    }\n\n    register_events() {\n        this.controls.deletebutton.click(() => {\n            if (this.controls.updatecontrol) {\n                if (confirm(M.util.get_string('reallydeletefeedback', this.component))) {\n                    this.controls.updatecontrol.val(-1);\n                    this.controls.currentcontainer.html('');\n                }\n            }\n        });\n        this.controls.togglebutton.click(this.toggle_currentfeedback.bind(this));\n        this.controls.toggletext.click(this.toggle_currentfeedback.bind(this));\n    }\n\n    toggle_currentfeedback() {\n        const doToggleState = () => {\n            if (this.togglestate == 0) {\n                this.controls.togglebutton.removeClass('fa-toggle-off');\n                this.controls.togglebutton.addClass('fa-toggle-on');\n                this.controls.toggletext.text(this.strings['clicktohide']);\n                this.togglestate = 1;\n            } else {\n                this.controls.togglebutton.removeClass('fa-toggle-on');\n                this.controls.togglebutton.addClass('fa-toggle-off');\n                this.controls.toggletext.text(this.strings['clicktoshow']);\n                this.togglestate = 0;\n            }\n        };\n        this.controls.currentcontainer.toggle(\n            {duration: 300, complete: doToggleState}\n        );\n        return false;\n    }\n}// end of return object."],"names":["debug","registeredtoggler","feedbackHandler","constructor","opts","component","subtype","register_controls","register_events","setup_recorder","document","addEventListener","e","toggleinput","target","closest","togglecontainer","querySelector","dataset","labelElement","$togglecontainer","checked","collapse","classList","add","remove","controls","deletebutton","this","updatecontrol","currentcontainer","togglebutton","toggletext","str","get_string","done","s","strings","click","confirm","M","util","val","html","toggle_currentfeedback","bind","toggle","duration","complete","togglestate","removeClass","addClass","text"],"mappings":"gjDAKIA,MAAM,iDAGNC,mBAAoB,QAEHC,gBAMjBC,YAAYC,yCAJE,kCACJ,oCACC,SAGFC,UAAYD,KAAI,eAChBE,QAAUF,KAAI,SAAe,QAE7BG,yBACAC,uBACAC,6BAGGL,aACD,IAAIF,gBAAgBE,+BAIvBH,oBAGJA,mBAAoB,EACpBS,SAASC,iBAAiB,SAASC,UACzBC,YAAcD,EAAEE,OAAOC,QAAQ,6BACjCF,sBAEUG,gBAAkBN,SAASO,cAAcJ,YAAYK,QAAQJ,WAC/DE,gBAAiB,OACXG,aAAeN,YAAYE,QAAQ,wBACnCK,kBAAmB,mBAAEJ,iBACvBH,YAAYQ,SACZD,iBAAiBE,SAAS,QAC1BH,aAAaI,UAAUC,IAAI,kBAE3BJ,iBAAiBE,SAAS,QAC1BH,aAAaI,UAAUE,OAAO,kBAGxC,MAAOb,gBAEDZ,MAAMY,QAQ1BL,yBACSmB,SAASC,cAAe,mBAAE,IAAMC,KAAKvB,UAAYuB,KAAKtB,QAAU,8BAChEoB,SAASG,eAAgB,mBAAE,IAAMD,KAAKvB,UAAYuB,KAAKtB,QAAU,uBACjEoB,SAASI,kBAAmB,mBAAE,IAAMF,KAAKvB,UAAYuB,KAAKtB,QAAU,yBACpEoB,SAASV,iBAAkB,mBAAE,IAAMY,KAAKvB,UAAYuB,KAAKtB,QAAU,yBACnEoB,SAASK,cAAe,mBAAE,IAAMH,KAAKvB,UAAYuB,KAAKtB,QAAU,uCAChEoB,SAASM,YAAa,mBAAE,IAAMJ,KAAKvB,UAAYuB,KAAKtB,QAAU,gCACnE2B,IAAIC,WAAW,cAAeN,KAAKvB,WAAW8B,MAAKC,SAC1CC,QAAL,YAA8BD,KAElCH,IAAIC,WAAW,cAAeN,KAAKvB,WAAW8B,MAAKC,SAC1CC,QAAL,YAA8BD,KAItC5B,uBACSkB,SAASC,aAAaW,OAAM,KACzBV,KAAKF,SAASG,eACVU,QAAQC,EAAEC,KAAKP,WAAW,uBAAwBN,KAAKvB,mBAClDqB,SAASG,cAAca,KAAK,QAC5BhB,SAASI,iBAAiBa,KAAK,aAI3CjB,SAASK,aAAaO,MAAMV,KAAKgB,uBAAuBC,KAAKjB,YAC7DF,SAASM,WAAWM,MAAMV,KAAKgB,uBAAuBC,KAAKjB,OAGpEgB,qCAcSlB,SAASI,iBAAiBgB,OAC3B,CAACC,SAAU,IAAKC,SAdE,KACM,GAApBpB,KAAKqB,kBACAvB,SAASK,aAAamB,YAAY,sBAClCxB,SAASK,aAAaoB,SAAS,qBAC/BzB,SAASM,WAAWoB,KAAKxB,KAAKS,QAAL,kBACzBY,YAAc,SAEdvB,SAASK,aAAamB,YAAY,qBAClCxB,SAASK,aAAaoB,SAAS,sBAC/BzB,SAASM,WAAWoB,KAAKxB,KAAKS,QAAL,kBACzBY,YAAc,OAMpB"}